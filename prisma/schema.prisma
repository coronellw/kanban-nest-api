// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String

  dateOfBirth DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  boards Board[]
  tasks  Task[]
  tokens Token[]
}

model Token {
  userId     Int
  user       User   @relation(fields: [userId], references: [id])
  tokenValue String @unique
}

model Board {
  id      Int      @id @default(autoincrement())
  name    String
  owner   User     @relation(fields: [userId], references: [id])
  userId  Int
  columns Column[]
}

model Column {
  id      Int    @id @default(autoincrement())
  name    String
  color   String @default("#ffffff")
  board   Board  @relation(fields: [boardId], references: [id])
  boardId Int
  tasks   Task[]
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  userId      Int?
  assignee    User?     @relation(fields: [userId], references: [id])
  status      Column?   @relation(fields: [columnId], references: [id])
  columnId    Int?
  subtasks    SubTask[]
}

model SubTask {
  id         Int     @id @default(autoincrement())
  taskId     Int
  parentTask Task    @relation(fields: [taskId], references: [id])
  name       String
  completed  Boolean
}
